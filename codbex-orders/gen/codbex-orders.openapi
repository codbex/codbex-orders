openapi: 3.0.3
info:
  title: Order Management Module - OpenAPI 3.0
  version: 1.0.0
  description: Managing order data
externalDocs:
  description: Find out more about Eclipse Dirigible
  url: https://dirigible.io
servers:
  - url: /services/ts
tags:
  - name: SalesOrder
  - name: SalesOrder
  - name: PurchaseOrder
  - name: PurchaseOrder
  - name: OrdersSettings
  - name: OrdersSettings
  - name: SalesOrder
  - name: PurchaseOrder
  - name: Reports
  - name: entities
  - name: Reports
  - name: entities
  - name: Reports
  - name: entities
  - name: Reports
  - name: entities
  - name: WorkOrder
  - name: OrdersSettings
paths:
  /codbex-orders/gen/api/SalesOrder/SalesOrderService.ts:
    get:
      summary: List SalesOrder
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - SalesOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrder'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalesOrder
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrder'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderService.ts/{id}:
    get:
      summary: Get SalesOrder by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SalesOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrder'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalesOrder by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrder'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalesOrder by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SalesOrder
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderService.ts/count:
    get:
      summary: Count the number of SalesOrder
      tags:
        - SalesOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalesOrder by SalesOrderFilterOptions
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderService.ts/search:
    post:
      summary: Search SalesOrder by SalesOrderFilterOptions
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrder'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderItemService.ts:
    get:
      summary: List SalesOrderItem
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - SalesOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrderItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalesOrderItem
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderItem'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderItemService.ts/{id}:
    get:
      summary: Get SalesOrderItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SalesOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrderItem'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalesOrderItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderItem'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalesOrderItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SalesOrder
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderItemService.ts/count:
    get:
      summary: Count the number of SalesOrderItem
      tags:
        - SalesOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalesOrderItem by SalesOrderItemFilterOptions
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderItemFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderItemService.ts/search:
    post:
      summary: Search SalesOrderItem by SalesOrderItemFilterOptions
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderItemFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrderItem'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderService.ts:
    get:
      summary: List PurchaseOrder
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - PurchaseOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrder'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PurchaseOrder
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderService.ts/{id}:
    get:
      summary: Get PurchaseOrder by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PurchaseOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrder'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PurchaseOrder by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PurchaseOrder by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PurchaseOrder
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderService.ts/count:
    get:
      summary: Count the number of PurchaseOrder
      tags:
        - PurchaseOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PurchaseOrder by PurchaseOrderFilterOptions
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderService.ts/search:
    post:
      summary: Search PurchaseOrder by PurchaseOrderFilterOptions
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrder'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderItemService.ts:
    get:
      summary: List PurchaseOrderItem
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - PurchaseOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrderItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PurchaseOrderItem
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderItem'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderItemService.ts/{id}:
    get:
      summary: Get PurchaseOrderItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PurchaseOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrderItem'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PurchaseOrderItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderItem'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PurchaseOrderItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PurchaseOrder
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderItemService.ts/count:
    get:
      summary: Count the number of PurchaseOrderItem
      tags:
        - PurchaseOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PurchaseOrderItem by PurchaseOrderItemFilterOptions
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderItemFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderItemService.ts/search:
    post:
      summary: Search PurchaseOrderItem by PurchaseOrderItemFilterOptions
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderItemFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrderItem'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/SalesOrderStatusService.ts:
    get:
      summary: List SalesOrderStatus
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - OrdersSettings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrderStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalesOrderStatus
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderStatus'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/SalesOrderStatusService.ts/{id}:
    get:
      summary: Get SalesOrderStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - OrdersSettings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrderStatus'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalesOrderStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderStatus'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalesOrderStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - OrdersSettings
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/SalesOrderStatusService.ts/count:
    get:
      summary: Count the number of SalesOrderStatus
      tags:
        - OrdersSettings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalesOrderStatus by SalesOrderStatusFilterOptions
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderStatusFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/SalesOrderStatusService.ts/search:
    post:
      summary: Search SalesOrderStatus by SalesOrderStatusFilterOptions
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderStatusFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrderStatus'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/PurchaseOrderStatusService.ts:
    get:
      summary: List PurchaseOrderStatus
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - OrdersSettings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrderStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PurchaseOrderStatus
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderStatus'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/PurchaseOrderStatusService.ts/{id}:
    get:
      summary: Get PurchaseOrderStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - OrdersSettings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrderStatus'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PurchaseOrderStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderStatus'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PurchaseOrderStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - OrdersSettings
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/PurchaseOrderStatusService.ts/count:
    get:
      summary: Count the number of PurchaseOrderStatus
      tags:
        - OrdersSettings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PurchaseOrderStatus by PurchaseOrderStatusFilterOptions
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderStatusFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/PurchaseOrderStatusService.ts/search:
    post:
      summary: Search PurchaseOrderStatus by PurchaseOrderStatusFilterOptions
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderStatusFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrderStatus'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderPaymentService.ts:
    get:
      summary: List SalesOrderPayment
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - SalesOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrderPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalesOrderPayment
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderPayment'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderPaymentService.ts/{id}:
    get:
      summary: Get SalesOrderPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SalesOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrderPayment'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalesOrderPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderPayment'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalesOrderPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SalesOrder
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderPaymentService.ts/count:
    get:
      summary: Count the number of SalesOrderPayment
      tags:
        - SalesOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalesOrderPayment by SalesOrderPaymentFilterOptions
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderPaymentFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/SalesOrder/SalesOrderPaymentService.ts/search:
    post:
      summary: Search SalesOrderPayment by SalesOrderPaymentFilterOptions
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderPaymentFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrderPayment'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderPaymentService.ts:
    get:
      summary: List PurchaseOrderPayment
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - PurchaseOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrderPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PurchaseOrderPayment
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderPayment'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderPaymentService.ts/{id}:
    get:
      summary: Get PurchaseOrderPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PurchaseOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrderPayment'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PurchaseOrderPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderPayment'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PurchaseOrderPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PurchaseOrder
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderPaymentService.ts/count:
    get:
      summary: Count the number of PurchaseOrderPayment
      tags:
        - PurchaseOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PurchaseOrderPayment by PurchaseOrderPaymentFilterOptions
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderPaymentFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/PurchaseOrder/PurchaseOrderPaymentService.ts/search:
    post:
      summary: Search PurchaseOrderPayment by PurchaseOrderPaymentFilterOptions
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderPaymentFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrderPayment'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/SalesOrdersReportService.ts:
    get:
      summary: List SalesOrdersReport
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalesOrdersReport
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersReport'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrdersReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/SalesOrdersReportService.ts/{id}:
    get:
      summary: Get SalesOrdersReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersReport'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalesOrdersReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersReport'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrdersReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalesOrdersReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/SalesOrdersReportService.ts/count:
    get:
      summary: Count the number of SalesOrdersReport
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalesOrdersReport by SalesOrdersReportFilterOptions
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersReportFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Number: 33
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                    greaterThan:
                      Number: 0
                    lessThanOrEqual:
                      Number: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Number: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Number: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Number: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Number: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Number: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Number: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/SalesOrdersReportService.ts/search:
    post:
      summary: Search SalesOrdersReport by SalesOrdersReportFilterOptions
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersReportFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Number: 33
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                    greaterThan:
                      Number: 0
                    lessThanOrEqual:
                      Number: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Number: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Number: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Number: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Number: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Number: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Number: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersReport'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/SalesOrdersReportFilterService.ts:
    get:
      summary: List SalesOrdersReportFilter
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalesOrdersReportFilter
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersReportFilter'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrdersReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/SalesOrdersReportFilterService.ts/{id}:
    get:
      summary: Get SalesOrdersReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersReportFilter'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalesOrdersReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersReportFilter'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrdersReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalesOrdersReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/SalesOrdersReportFilterService.ts/count:
    get:
      summary: Count the number of SalesOrdersReportFilter
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalesOrdersReportFilter by SalesOrdersReportFilterFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersReportFilterFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      SalesOrdersReport: 33
                    contains:
                      SalesOrdersReport: "abcd"
                      Number: "abcd"
                      Name: "abcd"
                    greaterThan:
                      SalesOrdersReport: 0
                    lessThanOrEqual:
                      SalesOrdersReport: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      SalesOrdersReport: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      SalesOrdersReport: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      SalesOrdersReport: "abcd"
                      Number: "abcd"
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      SalesOrdersReport: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      SalesOrdersReport: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      SalesOrdersReport: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      SalesOrdersReport: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/SalesOrdersReportFilterService.ts/search:
    post:
      summary: Search SalesOrdersReportFilter by SalesOrdersReportFilterFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersReportFilterFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      SalesOrdersReport: 33
                    contains:
                      SalesOrdersReport: "abcd"
                      Number: "abcd"
                      Name: "abcd"
                    greaterThan:
                      SalesOrdersReport: 0
                    lessThanOrEqual:
                      SalesOrdersReport: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      SalesOrdersReport: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      SalesOrdersReport: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      SalesOrdersReport: "abcd"
                      Number: "abcd"
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      SalesOrdersReport: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      SalesOrdersReport: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      SalesOrdersReport: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      SalesOrdersReport: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersReportFilter'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/SalesOrdersTotalReportService.ts:
    get:
      summary: List SalesOrdersTotalReport
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersTotalReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalesOrdersTotalReport
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersTotalReport'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrdersTotalReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/SalesOrdersTotalReportService.ts/{id}:
    get:
      summary: Get SalesOrdersTotalReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersTotalReport'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalesOrdersTotalReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersTotalReport'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrdersTotalReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalesOrdersTotalReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/SalesOrdersTotalReportService.ts/count:
    get:
      summary: Count the number of SalesOrdersTotalReport
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalesOrdersTotalReport by SalesOrdersTotalReportFilterOptions
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersTotalReportFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Date: 33
                    greaterThan:
                      Date: 0
                    lessThanOrEqual:
                      Date: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Date: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Date: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Date: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Date: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Date: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Date: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/SalesOrdersTotalReportService.ts/search:
    post:
      summary: Search SalesOrdersTotalReport by SalesOrdersTotalReportFilterOptions
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersTotalReportFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Date: 33
                    greaterThan:
                      Date: 0
                    lessThanOrEqual:
                      Date: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Date: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Date: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Date: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Date: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Date: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Date: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersTotalReport'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/SalesOrdersTotalReportFilterService.ts:
    get:
      summary: List SalesOrdersTotalReportFilter
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersTotalReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SalesOrdersTotalReportFilter
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersTotalReportFilter'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrdersTotalReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/SalesOrdersTotalReportFilterService.ts/{id}:
    get:
      summary: Get SalesOrdersTotalReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersTotalReportFilter'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SalesOrdersTotalReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersTotalReportFilter'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrdersTotalReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SalesOrdersTotalReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/SalesOrdersTotalReportFilterService.ts/count:
    get:
      summary: Count the number of SalesOrdersTotalReportFilter
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SalesOrdersTotalReportFilter by SalesOrdersTotalReportFilterFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersTotalReportFilterFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      SalesOrdersTotalReport: 33
                    contains:
                      SalesOrdersTotalReport: "abcd"
                    greaterThan:
                      SalesOrdersTotalReport: 0
                    lessThanOrEqual:
                      SalesOrdersTotalReport: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      SalesOrdersTotalReport: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      SalesOrdersTotalReport: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      SalesOrdersTotalReport: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      SalesOrdersTotalReport: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      SalesOrdersTotalReport: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      SalesOrdersTotalReport: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      SalesOrdersTotalReport: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/SalesOrdersTotalReportFilterService.ts/search:
    post:
      summary: Search SalesOrdersTotalReportFilter by SalesOrdersTotalReportFilterFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrdersTotalReportFilterFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      SalesOrdersTotalReport: 33
                    contains:
                      SalesOrdersTotalReport: "abcd"
                    greaterThan:
                      SalesOrdersTotalReport: 0
                    lessThanOrEqual:
                      SalesOrdersTotalReport: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      SalesOrdersTotalReport: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      SalesOrdersTotalReport: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      SalesOrdersTotalReport: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      SalesOrdersTotalReport: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      SalesOrdersTotalReport: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      SalesOrdersTotalReport: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      SalesOrdersTotalReport: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SalesOrdersTotalReportFilter'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/PurchaseOrdersReportService.ts:
    get:
      summary: List PurchaseOrdersReport
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PurchaseOrdersReport
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersReport'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/PurchaseOrdersReportService.ts/{id}:
    get:
      summary: Get PurchaseOrdersReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersReport'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PurchaseOrdersReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersReport'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PurchaseOrdersReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/PurchaseOrdersReportService.ts/count:
    get:
      summary: Count the number of PurchaseOrdersReport
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PurchaseOrdersReport by PurchaseOrdersReportFilterOptions
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersReportFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Number: 33
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                    greaterThan:
                      Number: 0
                    lessThanOrEqual:
                      Number: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Number: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Number: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Number: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Number: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Number: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Number: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/PurchaseOrdersReportService.ts/search:
    post:
      summary: Search PurchaseOrdersReport by PurchaseOrdersReportFilterOptions
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersReportFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Number: 33
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                    greaterThan:
                      Number: 0
                    lessThanOrEqual:
                      Number: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Number: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Number: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Number: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Number: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Number: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Number: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersReport'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/PurchaseOrdersReportFilterService.ts:
    get:
      summary: List PurchaseOrdersReportFilter
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PurchaseOrdersReportFilter
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersReportFilter'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/PurchaseOrdersReportFilterService.ts/{id}:
    get:
      summary: Get PurchaseOrdersReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersReportFilter'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PurchaseOrdersReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersReportFilter'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PurchaseOrdersReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/PurchaseOrdersReportFilterService.ts/count:
    get:
      summary: Count the number of PurchaseOrdersReportFilter
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PurchaseOrdersReportFilter by PurchaseOrdersReportFilterFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersReportFilterFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      PurchaseOrdersReport: 33
                    contains:
                      PurchaseOrdersReport: "abcd"
                      Number: "abcd"
                      Name: "abcd"
                    greaterThan:
                      PurchaseOrdersReport: 0
                    lessThanOrEqual:
                      PurchaseOrdersReport: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      PurchaseOrdersReport: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      PurchaseOrdersReport: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      PurchaseOrdersReport: "abcd"
                      Number: "abcd"
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      PurchaseOrdersReport: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      PurchaseOrdersReport: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      PurchaseOrdersReport: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      PurchaseOrdersReport: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/PurchaseOrdersReportFilterService.ts/search:
    post:
      summary: Search PurchaseOrdersReportFilter by PurchaseOrdersReportFilterFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersReportFilterFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      PurchaseOrdersReport: 33
                    contains:
                      PurchaseOrdersReport: "abcd"
                      Number: "abcd"
                      Name: "abcd"
                    greaterThan:
                      PurchaseOrdersReport: 0
                    lessThanOrEqual:
                      PurchaseOrdersReport: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      PurchaseOrdersReport: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      PurchaseOrdersReport: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      PurchaseOrdersReport: "abcd"
                      Number: "abcd"
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      PurchaseOrdersReport: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      PurchaseOrdersReport: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      PurchaseOrdersReport: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      PurchaseOrdersReport: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersReportFilter'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/PurchaseOrdersTotalReportService.ts:
    get:
      summary: List PurchaseOrdersTotalReport
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersTotalReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PurchaseOrdersTotalReport
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersTotalReport'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersTotalReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/PurchaseOrdersTotalReportService.ts/{id}:
    get:
      summary: Get PurchaseOrdersTotalReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersTotalReport'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PurchaseOrdersTotalReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersTotalReport'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersTotalReport'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PurchaseOrdersTotalReport by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Reports
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/PurchaseOrdersTotalReportService.ts/count:
    get:
      summary: Count the number of PurchaseOrdersTotalReport
      tags:
        - Reports
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PurchaseOrdersTotalReport by PurchaseOrdersTotalReportFilterOptions
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersTotalReportFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Date: 33
                    greaterThan:
                      Date: 0
                    lessThanOrEqual:
                      Date: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Date: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Date: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Date: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Date: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Date: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Date: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/Reports/PurchaseOrdersTotalReportService.ts/search:
    post:
      summary: Search PurchaseOrdersTotalReport by PurchaseOrdersTotalReportFilterOptions
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersTotalReportFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Date: 33
                    greaterThan:
                      Date: 0
                    lessThanOrEqual:
                      Date: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Date: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Date: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Date: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Date: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Date: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Date: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersTotalReport'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/PurchaseOrdersTotalReportFilterService.ts:
    get:
      summary: List PurchaseOrdersTotalReportFilter
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersTotalReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PurchaseOrdersTotalReportFilter
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersTotalReportFilter'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersTotalReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/PurchaseOrdersTotalReportFilterService.ts/{id}:
    get:
      summary: Get PurchaseOrdersTotalReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersTotalReportFilter'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PurchaseOrdersTotalReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersTotalReportFilter'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrdersTotalReportFilter'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PurchaseOrdersTotalReportFilter by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - entities
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/PurchaseOrdersTotalReportFilterService.ts/count:
    get:
      summary: Count the number of PurchaseOrdersTotalReportFilter
      tags:
        - entities
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PurchaseOrdersTotalReportFilter by PurchaseOrdersTotalReportFilterFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersTotalReportFilterFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      PurchaseOrdersTotalReport: 33
                    greaterThan:
                      PurchaseOrdersTotalReport: 0
                    lessThanOrEqual:
                      PurchaseOrdersTotalReport: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      PurchaseOrdersTotalReport: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      PurchaseOrdersTotalReport: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      PurchaseOrdersTotalReport: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      PurchaseOrdersTotalReport: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      PurchaseOrdersTotalReport: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      PurchaseOrdersTotalReport: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/entities/PurchaseOrdersTotalReportFilterService.ts/search:
    post:
      summary: Search PurchaseOrdersTotalReportFilter by PurchaseOrdersTotalReportFilterFilterOptions
      tags:
        - entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrdersTotalReportFilterFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      PurchaseOrdersTotalReport: 33
                    greaterThan:
                      PurchaseOrdersTotalReport: 0
                    lessThanOrEqual:
                      PurchaseOrdersTotalReport: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      PurchaseOrdersTotalReport: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      PurchaseOrdersTotalReport: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      PurchaseOrdersTotalReport: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      PurchaseOrdersTotalReport: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      PurchaseOrdersTotalReport: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      PurchaseOrdersTotalReport: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PurchaseOrdersTotalReportFilter'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/WorkOrder/WorkOrderService.ts:
    get:
      summary: List WorkOrder
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - WorkOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/WorkOrder'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create WorkOrder
      tags:
        - WorkOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrder'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/WorkOrder/WorkOrderService.ts/{id}:
    get:
      summary: Get WorkOrder by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - WorkOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/WorkOrder'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update WorkOrder by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - WorkOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrder'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete WorkOrder by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - WorkOrder
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/WorkOrder/WorkOrderService.ts/count:
    get:
      summary: Count the number of WorkOrder
      tags:
        - WorkOrder
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of WorkOrder by WorkOrderFilterOptions
      tags:
        - WorkOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrderFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Task: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      UUID: "abcd"
                      Name: "abcd"
                      Referance: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Task: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      UUID: "abcd"
                      Name: "abcd"
                      Referance: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/WorkOrder/WorkOrderService.ts/search:
    post:
      summary: Search WorkOrder by WorkOrderFilterOptions
      tags:
        - WorkOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrderFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Task: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      UUID: "abcd"
                      Name: "abcd"
                      Referance: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Task: "abcd"
                      Conditions: "abcd"
                      Document: "abcd"
                      UUID: "abcd"
                      Name: "abcd"
                      Referance: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/WorkOrder'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/WorkOrderStatusService.ts:
    get:
      summary: List WorkOrderStatus
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - OrdersSettings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/WorkOrderStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create WorkOrderStatus
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrderStatus'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrderStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/WorkOrderStatusService.ts/{id}:
    get:
      summary: Get WorkOrderStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - OrdersSettings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/WorkOrderStatus'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update WorkOrderStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrderStatus'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrderStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete WorkOrderStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - OrdersSettings
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/WorkOrderStatusService.ts/count:
    get:
      summary: Count the number of WorkOrderStatus
      tags:
        - OrdersSettings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of WorkOrderStatus by WorkOrderStatusFilterOptions
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrderStatusFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-orders/gen/api/OrdersSettings/WorkOrderStatusService.ts/search:
    post:
      summary: Search WorkOrderStatus by WorkOrderStatusFilterOptions
      tags:
        - OrdersSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrderStatusFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/WorkOrderStatus'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    SalesOrder:
      type: object
      required:
        - Date
        - Due
        - Customer
        - Currency
        - PaymentMethod
        - SentMethod
        - SalesOrderStatus
        - Operator
      properties:
        Id:
          type: integer
          format: int32
        Number:
          type: string
          minLength: 0
          maxLength: 20
          readOnly: true
        Date:
        Due:
        Customer:
          type: integer
          format: int32
        Net:
          type: number
          format: double
        Currency:
          type: integer
          format: int32
        Gross:
          type: number
          format: double
        Discount:
          type: number
          format: double
        Taxes:
          type: number
          format: double
        VAT:
          type: number
          format: double
        Total:
          type: number
          format: double
        Paid:
          type: number
          format: double
        Conditions:
          type: string
          minLength: 0
          maxLength: 200
        PaymentMethod:
          type: integer
          format: int32
        SentMethod:
          type: integer
          format: int32
        SalesOrderStatus:
          type: integer
          format: int32
        Operator:
          type: integer
          format: int32
        Document:
          type: string
          minLength: 0
          maxLength: 200
        Company:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 200
          readOnly: true
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Reference:
          type: string
          minLength: 0
          maxLength: 36
    SalesOrderFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Date:
                  oneOf:
                Due:
                  oneOf:
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Discount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Taxes:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Total:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Paid:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Conditions:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PaymentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SalesOrderStatus:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Operator:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Document:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Date:
                  oneOf:
                Due:
                  oneOf:
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Discount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Taxes:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Total:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Paid:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Conditions:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PaymentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SalesOrderStatus:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Operator:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Document:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Customer:
                Net:
                Currency:
                Gross:
                Discount:
                Taxes:
                VAT:
                Total:
                Paid:
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                SentMethod:
                SalesOrderStatus:
                Operator:
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Customer:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                SalesOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Customer:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                SalesOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Customer:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                SalesOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Customer:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                SalesOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Number", "Date", "Due", "Customer", "Net", "Currency", "Gross", "Discount", "Taxes", "VAT", "Total", "Paid", "Conditions", "PaymentMethod", "SentMethod", "SalesOrderStatus", "Operator", "Document", "Company", "Name", "UUID", "Reference"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Number,Date,Due,Customer,Net,Currency,Gross,Discount,Taxes,VAT,Total,Paid,Conditions,PaymentMethod,SentMethod,SalesOrderStatus,Operator,Document,Company,Name,UUID,Reference"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SalesOrderItem:
      type: object
      required:
        - SalesOrder
        - Product
        - Quantity
        - UoM
        - Price
      properties:
        Id:
          type: integer
          format: int32
        SalesOrder:
          type: integer
          format: int32
        Product:
          type: integer
          format: int32
        Quantity:
          type: number
          format: double
        UoM:
          type: integer
          format: int32
        Price:
          type: number
          format: double
        Net:
          type: number
          format: double
          readOnly: true
        VAT:
          type: number
          format: double
          readOnly: true
        Gross:
          type: number
          format: double
          readOnly: true
    SalesOrderItemFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SalesOrder:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Price:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SalesOrder:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Price:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Id:
                SalesOrder:
                Product:
                Quantity:
                UoM:
                Price:
                Net:
                VAT:
                Gross:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Id", "SalesOrder", "Product", "Quantity", "UoM", "Price", "Net", "VAT", "Gross"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,SalesOrder,Product,Quantity,UoM,Price,Net,VAT,Gross"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PurchaseOrder:
      type: object
      required:
        - Date
        - Due
        - Supplier
        - Currency
        - PaymentMethod
        - SentMethod
        - PurchaseOrderStatus
        - Operator
      properties:
        Id:
          type: integer
          format: int32
        Number:
          type: string
          minLength: 0
          maxLength: 20
          readOnly: true
        Date:
        Due:
        Supplier:
          type: integer
          format: int32
        Net:
          type: number
          format: double
        Currency:
          type: integer
          format: int32
        Gross:
          type: number
          format: double
        Discount:
          type: number
          format: double
        Taxes:
          type: number
          format: double
        VAT:
          type: number
          format: double
        Total:
          type: number
          format: double
        Paid:
          type: number
          format: double
        Conditions:
          type: string
          minLength: 0
          maxLength: 200
        PaymentMethod:
          type: integer
          format: int32
        SentMethod:
          type: integer
          format: int32
        PurchaseOrderStatus:
          type: integer
          format: int32
        Operator:
          type: integer
          format: int32
        Document:
          type: string
          minLength: 0
          maxLength: 200
        Company:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 200
          readOnly: true
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Reference:
          type: string
          minLength: 0
          maxLength: 36
    PurchaseOrderFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Date:
                  oneOf:
                Due:
                  oneOf:
                Supplier:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Discount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Taxes:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Total:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Paid:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Conditions:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PaymentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PurchaseOrderStatus:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Operator:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Document:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Date:
                  oneOf:
                Due:
                  oneOf:
                Supplier:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Discount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Taxes:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Total:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Paid:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Conditions:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PaymentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PurchaseOrderStatus:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Operator:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Document:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Supplier:
                Net:
                Currency:
                Gross:
                Discount:
                Taxes:
                VAT:
                Total:
                Paid:
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                SentMethod:
                PurchaseOrderStatus:
                Operator:
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Supplier:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                PurchaseOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Supplier:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                PurchaseOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Supplier:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                PurchaseOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Supplier:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                PurchaseOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Number", "Date", "Due", "Supplier", "Net", "Currency", "Gross", "Discount", "Taxes", "VAT", "Total", "Paid", "Conditions", "PaymentMethod", "SentMethod", "PurchaseOrderStatus", "Operator", "Document", "Company", "Name", "UUID", "Reference"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Number,Date,Due,Supplier,Net,Currency,Gross,Discount,Taxes,VAT,Total,Paid,Conditions,PaymentMethod,SentMethod,PurchaseOrderStatus,Operator,Document,Company,Name,UUID,Reference"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PurchaseOrderItem:
      type: object
      required:
        - PurchaseOrder
        - Product
        - Quantity
        - UoM
        - Price
      properties:
        Id:
          type: integer
          format: int32
        PurchaseOrder:
          type: integer
          format: int32
        Product:
          type: integer
          format: int32
        Quantity:
          type: number
          format: double
        UoM:
          type: integer
          format: int32
        Price:
          type: number
          format: double
        Net:
          type: number
          format: double
          readOnly: true
        VAT:
          type: number
          format: double
          readOnly: true
        Gross:
          type: number
          format: double
          readOnly: true
    PurchaseOrderItemFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PurchaseOrder:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Price:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PurchaseOrder:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Price:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Id:
                PurchaseOrder:
                Product:
                Quantity:
                UoM:
                Price:
                Net:
                VAT:
                Gross:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                PurchaseOrder:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                PurchaseOrder:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                PurchaseOrder:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                PurchaseOrder:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Id", "PurchaseOrder", "Product", "Quantity", "UoM", "Price", "Net", "VAT", "Gross"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,PurchaseOrder,Product,Quantity,UoM,Price,Net,VAT,Gross"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SalesOrderStatus:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
    SalesOrderStatusFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
        $select:
          type: array
          example: ["Id", "Name"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PurchaseOrderStatus:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
    PurchaseOrderStatusFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
        $select:
          type: array
          example: ["Id", "Name"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SalesOrderPayment:
      type: object
      required:
        - SalesOrder
        - CustomerPayment
        - Amount
      properties:
        Id:
          type: integer
          format: int32
        SalesOrder:
          type: integer
          format: int32
        CustomerPayment:
          type: integer
          format: int32
        Amount:
          type: number
          format: double
    SalesOrderPaymentFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SalesOrder:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                CustomerPayment:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SalesOrder:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                CustomerPayment:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Id:
                SalesOrder:
                CustomerPayment:
                Amount:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
                CustomerPayment:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
                CustomerPayment:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
                CustomerPayment:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
                CustomerPayment:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Id", "SalesOrder", "CustomerPayment", "Amount"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,SalesOrder,CustomerPayment,Amount"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PurchaseOrderPayment:
      type: object
      required:
        - PurchaseOrder
        - SupplierPayment
        - Amount
      properties:
        Id:
          type: integer
          format: int32
        PurchaseOrder:
          type: integer
          format: int32
        SupplierPayment:
          type: integer
          format: int32
        Amount:
          type: number
          format: double
    PurchaseOrderPaymentFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PurchaseOrder:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SupplierPayment:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PurchaseOrder:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SupplierPayment:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Id:
                PurchaseOrder:
                SupplierPayment:
                Amount:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                PurchaseOrder:
                  type: integer
                  format: int32
                SupplierPayment:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                PurchaseOrder:
                  type: integer
                  format: int32
                SupplierPayment:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                PurchaseOrder:
                  type: integer
                  format: int32
                SupplierPayment:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                PurchaseOrder:
                  type: integer
                  format: int32
                SupplierPayment:
                  type: integer
                  format: int32
                Amount:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Id", "PurchaseOrder", "SupplierPayment", "Amount"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,PurchaseOrder,SupplierPayment,Amount"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SalesOrdersReport:
      type: object
      required:
      properties:
        Number:
          type: string
          minLength: 0
          maxLength: 20
        Name:
          type: string
          minLength: 0
          maxLength: 200
        Date:
        Due:
    SalesOrdersReportFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Date:
                  oneOf:
                Due:
                  oneOf:
            notEquals:
              type: object
              properties:
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Date:
                  oneOf:
                Due:
                  oneOf:
            contains:
              type: object
              properties:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            greaterThan:
              type: object
              properties:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            greaterThanOrEqual:
              type: object
              properties:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            lessThan:
              type: object
              properties:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            lessThanOrEqual:
              type: object
              properties:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
        $select:
          type: array
          example: ["Number", "Name", "Date", "Due"]
          items:
            type: string
        $sort:
          - type: string
            example: "Number,Name,Date,Due"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SalesOrdersReportFilter:
      type: object
      required:
      properties:
        SalesOrdersReport:
          type: string
          minLength: 0
          maxLength: 20
        Number:
          type: string
          minLength: 0
          maxLength: 20
        Name:
          type: string
          minLength: 0
          maxLength: 200
        Date:
        Due:
    SalesOrdersReportFilterFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                SalesOrdersReport:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Date:
                  oneOf:
                Due:
                  oneOf:
            notEquals:
              type: object
              properties:
                SalesOrdersReport:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Date:
                  oneOf:
                Due:
                  oneOf:
            contains:
              type: object
              properties:
                SalesOrdersReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            greaterThan:
              type: object
              properties:
                SalesOrdersReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            greaterThanOrEqual:
              type: object
              properties:
                SalesOrdersReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            lessThan:
              type: object
              properties:
                SalesOrdersReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            lessThanOrEqual:
              type: object
              properties:
                SalesOrdersReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
        $select:
          type: array
          example: ["SalesOrdersReport", "Number", "Name", "Date", "Due"]
          items:
            type: string
        $sort:
          - type: string
            example: "SalesOrdersReport,Number,Name,Date,Due"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SalesOrdersTotalReport:
      type: object
      required:
      properties:
        Date:
        Total:
          type: number
          format: double
    SalesOrdersTotalReportFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Date:
                  oneOf:
                Total:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Date:
                  oneOf:
                Total:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Date:
                Total:
            greaterThan:
              type: object
              properties:
                Date:
                Total:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Date:
                Total:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Date:
                Total:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Date:
                Total:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Date", "Total"]
          items:
            type: string
        $sort:
          - type: string
            example: "Date,Total"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SalesOrdersTotalReportFilter:
      type: object
      required:
      properties:
        SalesOrdersTotalReport:
          type: string
          minLength: 0
          maxLength: 20
        StartDate:
        EndDate:
    SalesOrdersTotalReportFilterFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                SalesOrdersTotalReport:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                StartDate:
                  oneOf:
                EndDate:
                  oneOf:
            notEquals:
              type: object
              properties:
                SalesOrdersTotalReport:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                StartDate:
                  oneOf:
                EndDate:
                  oneOf:
            contains:
              type: object
              properties:
                SalesOrdersTotalReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                StartDate:
                EndDate:
            greaterThan:
              type: object
              properties:
                SalesOrdersTotalReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                StartDate:
                EndDate:
            greaterThanOrEqual:
              type: object
              properties:
                SalesOrdersTotalReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                StartDate:
                EndDate:
            lessThan:
              type: object
              properties:
                SalesOrdersTotalReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                StartDate:
                EndDate:
            lessThanOrEqual:
              type: object
              properties:
                SalesOrdersTotalReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                StartDate:
                EndDate:
        $select:
          type: array
          example: ["SalesOrdersTotalReport", "StartDate", "EndDate"]
          items:
            type: string
        $sort:
          - type: string
            example: "SalesOrdersTotalReport,StartDate,EndDate"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PurchaseOrdersReport:
      type: object
      required:
      properties:
        Number:
          type: string
          minLength: 0
          maxLength: 20
        Name:
          type: string
          minLength: 0
          maxLength: 200
        Date:
        Due:
    PurchaseOrdersReportFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Date:
                  oneOf:
                Due:
                  oneOf:
            notEquals:
              type: object
              properties:
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Date:
                  oneOf:
                Due:
                  oneOf:
            contains:
              type: object
              properties:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            greaterThan:
              type: object
              properties:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            greaterThanOrEqual:
              type: object
              properties:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            lessThan:
              type: object
              properties:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            lessThanOrEqual:
              type: object
              properties:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
        $select:
          type: array
          example: ["Number", "Name", "Date", "Due"]
          items:
            type: string
        $sort:
          - type: string
            example: "Number,Name,Date,Due"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PurchaseOrdersReportFilter:
      type: object
      required:
      properties:
        PurchaseOrdersReport:
          type: string
          minLength: 0
          maxLength: 20
        Number:
          type: string
          minLength: 0
          maxLength: 20
        Name:
          type: string
          minLength: 0
          maxLength: 200
        Date:
        Due:
    PurchaseOrdersReportFilterFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                PurchaseOrdersReport:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Date:
                  oneOf:
                Due:
                  oneOf:
            notEquals:
              type: object
              properties:
                PurchaseOrdersReport:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Date:
                  oneOf:
                Due:
                  oneOf:
            contains:
              type: object
              properties:
                PurchaseOrdersReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            greaterThan:
              type: object
              properties:
                PurchaseOrdersReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            greaterThanOrEqual:
              type: object
              properties:
                PurchaseOrdersReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            lessThan:
              type: object
              properties:
                PurchaseOrdersReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
            lessThanOrEqual:
              type: object
              properties:
                PurchaseOrdersReport:
                  type: string
                  minLength: 0
                  maxLength: 20
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Date:
                Due:
        $select:
          type: array
          example: ["PurchaseOrdersReport", "Number", "Name", "Date", "Due"]
          items:
            type: string
        $sort:
          - type: string
            example: "PurchaseOrdersReport,Number,Name,Date,Due"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PurchaseOrdersTotalReport:
      type: object
      required:
      properties:
        Date:
        Total:
          type: number
          format: double
    PurchaseOrdersTotalReportFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Date:
                  oneOf:
                Total:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Date:
                  oneOf:
                Total:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Date:
                Total:
            greaterThan:
              type: object
              properties:
                Date:
                Total:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Date:
                Total:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Date:
                Total:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Date:
                Total:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Date", "Total"]
          items:
            type: string
        $sort:
          - type: string
            example: "Date,Total"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PurchaseOrdersTotalReportFilter:
      type: object
      required:
      properties:
        PurchaseOrdersTotalReport:
        StartDate:
        EndDate:
    PurchaseOrdersTotalReportFilterFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                PurchaseOrdersTotalReport:
                  oneOf:
                StartDate:
                  oneOf:
                EndDate:
                  oneOf:
            notEquals:
              type: object
              properties:
                PurchaseOrdersTotalReport:
                  oneOf:
                StartDate:
                  oneOf:
                EndDate:
                  oneOf:
            contains:
              type: object
              properties:
                PurchaseOrdersTotalReport:
                StartDate:
                EndDate:
            greaterThan:
              type: object
              properties:
                PurchaseOrdersTotalReport:
                StartDate:
                EndDate:
            greaterThanOrEqual:
              type: object
              properties:
                PurchaseOrdersTotalReport:
                StartDate:
                EndDate:
            lessThan:
              type: object
              properties:
                PurchaseOrdersTotalReport:
                StartDate:
                EndDate:
            lessThanOrEqual:
              type: object
              properties:
                PurchaseOrdersTotalReport:
                StartDate:
                EndDate:
        $select:
          type: array
          example: ["PurchaseOrdersTotalReport", "StartDate", "EndDate"]
          items:
            type: string
        $sort:
          - type: string
            example: "PurchaseOrdersTotalReport,StartDate,EndDate"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    WorkOrder:
      type: object
      required:
        - Date
        - Due
        - Currency
        - PaymentMethod
        - SentMethod
        - WorkOrderStatus
        - Operator
      properties:
        Id:
          type: integer
          format: int32
        Number:
          type: string
          minLength: 0
          maxLength: 20
          readOnly: true
        Date:
        Due:
        Customer:
          type: integer
          format: int32
        Task:
          type: string
          minLength: 0
          maxLength: 200
        Net:
          type: number
          format: double
        Currency:
          type: integer
          format: int32
        Gross:
          type: number
          format: double
        Discount:
          type: number
          format: double
        Taxes:
          type: number
          format: double
        VAT:
          type: number
          format: double
        Total:
          type: number
          format: double
        Paid:
          type: number
          format: double
        Conditions:
          type: string
          minLength: 0
          maxLength: 200
        PaymentMethod:
          type: integer
          format: int32
        SentMethod:
          type: integer
          format: int32
        WorkOrderStatus:
          type: integer
          format: int32
        Operator:
          type: integer
          format: int32
        Document:
          type: string
          minLength: 0
          maxLength: 200
        Company:
          type: integer
          format: int32
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Name:
          type: string
          minLength: 0
          maxLength: 200
          readOnly: true
        Referance:
          type: string
          minLength: 0
          maxLength: 36
        Worker:
          type: integer
          format: int32
        SalesOrder:
          type: integer
          format: int32
    WorkOrderFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Date:
                  oneOf:
                Due:
                  oneOf:
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Task:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Discount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Taxes:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Total:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Paid:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Conditions:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PaymentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                WorkOrderStatus:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Operator:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Document:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Referance:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Worker:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SalesOrder:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Date:
                  oneOf:
                Due:
                  oneOf:
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Task:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Discount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Taxes:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Total:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Paid:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Conditions:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PaymentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                WorkOrderStatus:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Operator:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Document:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                Referance:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Worker:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                SalesOrder:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            contains:
              type: object
              properties:
                Id:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Customer:
                Task:
                  type: string
                  minLength: 0
                  maxLength: 200
                Net:
                Currency:
                Gross:
                Discount:
                Taxes:
                VAT:
                Total:
                Paid:
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                SentMethod:
                WorkOrderStatus:
                Operator:
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Referance:
                  type: string
                  minLength: 0
                  maxLength: 36
                Worker:
                SalesOrder:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Customer:
                  type: integer
                  format: int32
                Task:
                  type: string
                  minLength: 0
                  maxLength: 200
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                WorkOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Referance:
                  type: string
                  minLength: 0
                  maxLength: 36
                Worker:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Customer:
                  type: integer
                  format: int32
                Task:
                  type: string
                  minLength: 0
                  maxLength: 200
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                WorkOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Referance:
                  type: string
                  minLength: 0
                  maxLength: 36
                Worker:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Customer:
                  type: integer
                  format: int32
                Task:
                  type: string
                  minLength: 0
                  maxLength: 200
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                WorkOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Referance:
                  type: string
                  minLength: 0
                  maxLength: 36
                Worker:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Date:
                Due:
                Customer:
                  type: integer
                  format: int32
                Task:
                  type: string
                  minLength: 0
                  maxLength: 200
                Net:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Gross:
                  type: number
                  format: double
                Discount:
                  type: number
                  format: double
                Taxes:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Total:
                  type: number
                  format: double
                Paid:
                  type: number
                  format: double
                Conditions:
                  type: string
                  minLength: 0
                  maxLength: 200
                PaymentMethod:
                  type: integer
                  format: int32
                SentMethod:
                  type: integer
                  format: int32
                WorkOrderStatus:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Document:
                  type: string
                  minLength: 0
                  maxLength: 200
                Company:
                  type: integer
                  format: int32
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                Referance:
                  type: string
                  minLength: 0
                  maxLength: 36
                Worker:
                  type: integer
                  format: int32
                SalesOrder:
                  type: integer
                  format: int32
        $select:
          type: array
          example: ["Id", "Number", "Date", "Due", "Customer", "Task", "Net", "Currency", "Gross", "Discount", "Taxes", "VAT", "Total", "Paid", "Conditions", "PaymentMethod", "SentMethod", "WorkOrderStatus", "Operator", "Document", "Company", "UUID", "Name", "Referance", "Worker", "SalesOrder"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Number,Date,Due,Customer,Task,Net,Currency,Gross,Discount,Taxes,VAT,Total,Paid,Conditions,PaymentMethod,SentMethod,WorkOrderStatus,Operator,Document,Company,UUID,Name,Referance,Worker,SalesOrder"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    WorkOrderStatus:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
    WorkOrderStatusFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
        $select:
          type: array
          example: ["Id", "Name"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string